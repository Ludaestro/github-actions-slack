name: "Slack Notification"
description: "Notify in slack on build failure/success"
inputs:
  SLACK_WEBHOOK_URL:
    required: true
  GITHUB_TOKEN:
    required: true
  CHANNEL_ID:
    required: true
runs:
  using: "composite"
  steps:
  - name: Get previous workflow status
    if: always()
    uses: Mercymeilya/last-workflow-status@v0.3
    id: last_status
    env:
      SLACK_WEBHOOK_URL: ${{ inputs.SLACK_WEBHOOK_URL }}
      GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}

  - name: Pull Request Slack Notification
    uses: 8398a7/action-slack@v3
    if: ${{ github.event_name == 'pull_request' && (failure() || steps.last_status.outputs.last_status == 'failure') }}
    with:
      status: custom
      fields: repo,message,commit,author,action,eventName,ref,workflow,job,took,pullRequest # selectable (default: repo,message)
      custom_payload: |
        {
          attachments: [{
            color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
            text: `Repository: ${process.env.AS_REPO}\nMessage: Pull Request ${process.env.AS_COMMIT} of ${process.env.AS_PULL_REQUEST} by ${process.env.AS_AUTHOR} ${{ job.status }} in ${process.env.AS_TOOK}\nAction: ${process.env.AS_MESSAGE}`,
          }]
        }
      channel: ${{ inputs.CHANNEL_ID }}
    env:
      SLACK_WEBHOOK_URL: ${{ inputs.SLACK_WEBHOOK_URL }}
      GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}

  - name: Commit Slack Notification
    uses: 8398a7/action-slack@v3
    if: ${{ github.event_name != 'pull_request' && (failure() || steps.last_status.outputs.last_status == 'failure') }}
    with:
      status: custom
      fields: repo,message,commit,author,action,eventName,ref,workflow,job,took,pullRequest # selectable (default: repo,message)
      custom_payload: |
        {
          attachments: [{
            color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
            text: `Repository: ${process.env.AS_REPO}\nMessage: Commit ${process.env.AS_COMMIT} into ${{ github.ref_name }} by ${process.env.AS_AUTHOR} ${{ job.status }} in ${process.env.AS_TOOK}\nAction: ${process.env.AS_MESSAGE}`,
          }]
        }
      channel: ${{ inputs.CHANNEL_ID }}
    env:
      SLACK_WEBHOOK_URL: ${{ inputs.SLACK_WEBHOOK_URL }}
      GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}